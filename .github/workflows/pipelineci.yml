name: CI Pipeline

on:
  push:
    branches:
      - main
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Decrypt .env file
      env:
        ENCRYPTED_ENV_FILE: env_file.enc
        ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
        ENCRYPTION_IV: ${{ secrets.ENCRYPTION_IV }}
      run: |
        openssl aes-256-cbc -d -K $ENCRYPTION_KEY -iv $ENCRYPTION_IV -in $ENCRYPTED_ENV_FILE -out .env

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --dev --skip-lock
        
    - name: Run Integration tests
      run: |
        pipenv run pytest

  linting-and-formatting:
     runs-on: ubuntu-latest

     steps:
     - name: Checkout code
       uses: actions/checkout@v2

     - name: Set up Python
       uses: actions/setup-python@v2
       with:
        python-version: '3.8'

     - name: Install dependencies
       run: |
        python -m pip install --upgrade pip
        pip install flake8 black

     - name: Run linting
       continue-on-error: true
       run: flake8 src

     - name: Format with black in check mode
       continue-on-error: true
       run: black --check src

     - name: Format with black in format mode
       run: black src

  build-and-deploy:
    needs: tests
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

     # Docker Hub tag
    env:
       IMAGE_NAME: oxygencs
       IMAGE_VERSION: latest
       DOCKER_USER: ${{secrets.DOCKER_USERNAME}}
       DOCKER_PASSWORD: ${{secrets.DOCKER_TOKEN}}

    steps:
    - uses: actions/checkout@v3

    - name: Decrypt .env file
      env:
        ENCRYPTED_ENV_FILE: env_file.enc
        ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
        ENCRYPTION_IV: ${{ secrets.ENCRYPTION_IV }}
      run: |
        openssl aes-256-cbc -d -K $ENCRYPTION_KEY -iv $ENCRYPTION_IV -in $ENCRYPTED_ENV_FILE -out .env

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t ${{secrets.DOCKER_USERNAME}}/$IMAGE_NAME:$IMAGE_VERSION .
        docker build -t ${{secrets.DOCKER_USERNAME}}/$IMAGE_NAME:${{ github.run_id }} .

    - name: Deploy Docker image with latest tag
      run: docker push ${{secrets.DOCKER_USERNAME}}/$IMAGE_NAME:$IMAGE_VERSION

    - name: Deploy Docker image with unique tag
      run: docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:${{ github.run_id }}

    # Kubernetes
    - name: Set up Kubernetes
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Create .kube directory
      run: |
        mkdir -p $HOME/.kube

    - name: Set up Kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f kubectl/deployment.yaml
        kubectl apply -f kubectl/service.yaml
        kubectl apply -f kubectl/configmap.yaml

